[{"/Users/admin/Development/courses/my-twitter-react-infra/src/index.js":"1","/Users/admin/Development/courses/my-twitter-react-infra/src/components/app/index.js":"2","/Users/admin/Development/courses/my-twitter-react-infra/src/components/app/app.jsx":"3","/Users/admin/Development/courses/my-twitter-react-infra/src/components/search-panel/index.js":"4","/Users/admin/Development/courses/my-twitter-react-infra/src/components/app-header/index.js":"5","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list/index.js":"6","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-status-filter/index.js":"7","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-add-form/index.js":"8","/Users/admin/Development/courses/my-twitter-react-infra/src/components/app-header/app-header.jsx":"9","/Users/admin/Development/courses/my-twitter-react-infra/src/components/search-panel/search-panel.jsx":"10","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list/post-list.jsx":"11","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-status-filter/post-status-filter.jsx":"12","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-add-form/post-add-form.jsx":"13","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list-item/index.js":"14","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list-item/post-list-item.jsx":"15"},{"size":288,"mtime":1628861576042,"results":"16","hashOfConfig":"17"},{"size":49,"mtime":1628861576038,"results":"18","hashOfConfig":"17"},{"size":6726,"mtime":1628861576038,"results":"19","hashOfConfig":"17"},{"size":74,"mtime":1628861576042,"results":"20","hashOfConfig":"17"},{"size":68,"mtime":1628861576037,"results":"21","hashOfConfig":"17"},{"size":65,"mtime":1628861576040,"results":"22","hashOfConfig":"17"},{"size":90,"mtime":1628861576041,"results":"23","hashOfConfig":"17"},{"size":75,"mtime":1628861576039,"results":"24","hashOfConfig":"17"},{"size":714,"mtime":1628861576037,"results":"25","hashOfConfig":"17"},{"size":773,"mtime":1628861576042,"results":"26","hashOfConfig":"17"},{"size":1232,"mtime":1628861576041,"results":"27","hashOfConfig":"17"},{"size":1094,"mtime":1628861576041,"results":"28","hashOfConfig":"17"},{"size":1321,"mtime":1628861576039,"results":"29","hashOfConfig":"17"},{"size":77,"mtime":1628861576039,"results":"30","hashOfConfig":"17"},{"size":2284,"mtime":1628861576040,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"we1z7f",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Development/courses/my-twitter-react-infra/src/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/app/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/app/app.jsx",["65"],"import React from \"react\";\n\n// по умолчанию Webpack в уазанной дирректории ищет index.js\n// поэтому from \"../app-header\" === from \"../app-header/index.js\"\nimport AppHeader from \"../app-header\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport SearchPanel from \"../search-panel\";\nimport PostList from \"../post-list\";\nimport PostAddForm from \"../post-add-form\";\n\n// import style from './App.module.scss';\n// import './app.css';\nimport styled from 'styled-components';\n\nconst AppBlock = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n`;\n\nconst StyledAppBlock = styled(AppBlock)`\n  background-color: grey;\n`\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.postsId = 0;\n\n        this.randomMumId = () => {\n            return +(++this.postsId + +Math.random()).toString().replace(/\\./, '');\n        };\n\n        this.state = {\n            dataCards: [\n                { label: 'Going to learn React', important: true, like: false, id: this.randomMumId() },\n                { label: 'That is so funny', important: false, like: true, id: this.randomMumId() },\n                { label: 'I need a break...', important: false, like: false, id: this.randomMumId() }\n            ],\n            term: '',\n            filter: 'all'\n        };\n\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.searchPost = this.searchPost.bind(this);\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n        this.filterPost = this.filterPost.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n\n        this.changeStateForCard = this.changeStateForCard.bind(this);\n    }\n\n    deleteItem(idDeletetCard) {\n        this.postsId--;\n        this.setState(({dataCards}) => {\n            // Вариант I\n            // const index = dataCards.findIndex(elem => elem.id === idDeletetCard);\n            // const before = dataCards.slice(0, index);\n            // const after = dataCards.slice(index+1);\n            // const newArr = [...before, ...after]\n\n            // Вариант II\n            const newArr = [];\n\n            // всегда глубокая копия state иначе ошибки\n            JSON.parse(JSON.stringify(dataCards)).forEach(item => {\n                if (item.id !== idDeletetCard) newArr.push(item);\n            });\n\n            return {\n                dataCards: newArr\n            }\n        });\n    }\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.randomMumId()\n        };\n\n        this.setState(({dataCards}) => {\n            const newArr = [...dataCards, newItem];\n            return {\n                dataCards: newArr\n            };\n        });\n    }\n\n    changeStateForCard(id, elem) {\n        this.setState(({dataCards}) => {\n            // всегда глубокая копия state иначе ошибки\n            const newArr =\n                JSON.parse(JSON.stringify(dataCards))\n                    .map((item) => {\n                        if (item.id === id) {\n                            item[elem] = !item[elem];\n                            return item;\n                        } else return  item;\n                    });\n\n            return {\n                dataCards: newArr\n            }\n        });\n    }\n\n    onToggleImportant(id) {\n        this.changeStateForCard(id, 'important')\n    }\n\n    onToggleLiked(id) {\n        // Вариант I\n        // this.setState(({dataCards}) => {\n        //     // Вариант I\n        //     // const index = dataCards.findIndex(item => item.id === id);\n        //     // const old = dataCards[index]\n        //     // const newItem = {...old, like: !old.like}\n        //     // const newArr = [...dataCards.slice(0, index), newItem, ...dataCards.slice(index +1)];\n        //\n        //     // Вариант II\n        //     // всегда глубокая копия state иначе ошибки\n        //     const newArr =\n        //         JSON.parse(JSON.stringify(dataCards))\n        //             .map(item => {\n        //                 if (item.id === id) {\n        //                     item.like = !item.like;\n        //                     return item;\n        //                 } else return  item;\n        //             });\n        //\n        //     return {\n        //         dataCards: newArr\n        //     }\n        // });\n        // Вариант II\n        this.changeStateForCard(id, 'like')\n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) return items;\n\n        return items.filter((item) => item.label.indexOf(term) > -1);\n    }\n\n    onUpdateSearch(term) {\n        this.setState({term: term});\n    }\n\n    filterPost(items, filter) {\n        if (filter === 'like') return items.filter(item => item.like);\n        else return items;\n    }\n\n    onFilterSelect (filter) {\n        this.setState({filter: filter});\n\n    }\n\n    render() {\n        const {dataCards, term, filter} = this.state;\n\n        const visiblePosts = this.filterPost(this.searchPost(dataCards, term), filter);\n        const allPosts = dataCards.length;\n        // Вариант I\n        const likedPostCurrentCount = dataCards.filter(item => item.like).length;\n        // Вариант II\n        // const allPosts = this.state.dataCards.length;\n        // const likedPostCurrentCount = this.state.dataCards.filter(item => {\n        //     return item.like === true;\n        // }).length;\n\n        return (\n            <AppBlock>\n                <AppHeader\n                    allPosts = {allPosts}\n                    likedPostCurrentCount = {likedPostCurrentCount}\n                />\n                <div className='search-panel d-flex'>\n                    <SearchPanel\n                        onUpdateSearch={this.onUpdateSearch}\n                    />\n                    <PostStatusFilter\n                        filter={filter}\n                        onFilterSelect={this.onFilterSelect}\n                    />\n                </div>\n                <PostList\n                    // posts = {this.state.dataCards}\n                    posts = {visiblePosts}\n                    deleteCardById = {this.deleteItem}\n                    onToggleImportant = {this.onToggleImportant}\n                    onToggleLiked = {this.onToggleLiked}\n                />\n                <PostAddForm\n                    onAddCard = {this.addItem}\n                />\n            </AppBlock>\n        )\n    }\n}","/Users/admin/Development/courses/my-twitter-react-infra/src/components/search-panel/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/app-header/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-status-filter/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-add-form/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/app-header/app-header.jsx",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/search-panel/search-panel.jsx",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list/post-list.jsx",["66"],"import React from \"react\";\nimport PostListItem from \"../post-list-item\";\nimport { ListGroup } from 'reactstrap';\nimport './post-list.css';\n\nconst PostList = ({posts, deleteCardById, onToggleImportant, onToggleLiked}) => {\n\n    const element = posts.map(item => {\n        // проверяем пришел ли к нам именно объект\n        if (typeof item === 'object' && isEmpty(item)) {\n            const {id, ...itemProps} = item;\n            return (\n                <li key={id} className='list-group-item'>\n                    <PostListItem\n                        onDelete={() => deleteCardById(id)}\n                        onToggleImportant={() => onToggleImportant(id)}\n                        onToggleLiked={() => onToggleLiked(id)}\n                        {...itemProps}\n                    />\n                </li>\n            )\n        }\n    });\n\n    function isEmpty (item) {\n        for (let i in item) return true;\n        // for (let i in item) {\n        //     console.log(typeof i);\n        //     if (i !== false) return true;\n        // }\n        return false;\n    }\n\n    return (\n       <ListGroup className='app-list'>\n           {element}\n       </ListGroup>\n    )\n};\n\nexport default PostList;","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-status-filter/post-status-filter.jsx",["67"],"import React, {Component} from \"react\";\nimport { Button } from 'reactstrap';\nimport './post-status-filter.css';\n\nexport default class PostStatusFilter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.buttons = [\n            { name: 'all', lable: 'Все' },\n            { name: 'like', lable: 'Понравилось' }\n        ];\n\n        this.state = {};\n    }\n\n    render() {\n        const btns = this.buttons.map(({name, lable}) => {\n            const {filter, onFilterSelect} = this.props;\n            const active = filter === name;\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\n\n            return (\n                <button\n                    onClick={() => onFilterSelect(name)}\n                    key={name}\n                    type='button'\n                    className={`btn ${clazz}`}\n                >{lable}</button>\n            )\n        });\n        return (\n            <div className='btn-group'>\n                {/*<Button color='info'>Все</Button>*/}\n                {btns}\n            </div>\n        )\n    }\n};","/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-add-form/post-add-form.jsx",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list-item/index.js",[],"/Users/admin/Development/courses/my-twitter-react-infra/src/components/post-list-item/post-list-item.jsx",[],{"ruleId":"68","severity":1,"message":"69","line":20,"column":7,"nodeType":"70","messageId":"71","endLine":20,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":8,"column":36,"nodeType":"74","messageId":"75","endLine":8,"endColumn":38},{"ruleId":"68","severity":1,"message":"76","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":16},"no-unused-vars","'StyledAppBlock' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used."]
{"version":3,"sources":["components/app-header/app-header.jsx","components/app-header/index.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.jsx","components/search-panel/index.js","components/search-panel/search-panel.jsx","components/post-list-item/index.js","components/post-list-item/post-list-item.jsx","components/post-list/index.js","components/post-list/post-list.jsx","components/post-add-form/index.js","components/post-add-form/post-add-form.jsx","components/app/app.jsx","components/app/index.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","allPosts","likedPostCurrentCount","as","PostStatusFilter","buttons","name","lable","state","btns","this","map","filter","onFilterSelect","clazz","onClick","type","className","Component","SearchPanel","term","onUpdateSearch","bind","event","preventDefault","target","value","setState","placeholder","onChange","React","PostListItem","label","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","deleteCardById","element","item","i","isEmpty","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","length","onAddCard","AppBlock","App","postsId","randomMumId","Math","random","toString","replace","dataCards","deleteItem","addItem","searchPost","filterPost","changeStateForCard","idDeletetCard","newArr","JSON","parse","stringify","forEach","push","body","newItem","elem","items","indexOf","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6038c3c2.chunk.js","sourcesContent":["import React from \"react\";\nimport './app-header.css';\nimport styled from \"styled-components\";\n\nconst Header = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    h1 {\n      color: ${props => props.colored ? 'darkblue' : 'black'};\n      font-size: 26px;\n      :hover {\n        color: goldenrod;\n      }\n    } \n    h2 {\n      font-size: 1.2rem;\n      color: grey;\n    }\n`\n\nconst AppHeader = ({allPosts, likedPostCurrentCount}) => {\n    return (\n        <Header as='a' colored>\n            <h1>Name Surname</h1>\n            <h2>{allPosts} записей, из них понравилось {likedPostCurrentCount}</h2>\n        </Header>\n    )\n}\n\nexport default AppHeader;","import AppHeader from \"./app-header.jsx\";\n\nexport default AppHeader;","import PostStatusFilter from \"./post-status-filter.jsx\";\n\nexport default PostStatusFilter;","import React, {Component} from \"react\";\nimport { Button } from 'reactstrap';\nimport './post-status-filter.css';\n\nexport default class PostStatusFilter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.buttons = [\n            { name: 'all', lable: 'Все' },\n            { name: 'like', lable: 'Понравилось' }\n        ];\n\n        this.state = {};\n    }\n\n    render() {\n        const btns = this.buttons.map(({name, lable}) => {\n            const {filter, onFilterSelect} = this.props;\n            const active = filter === name;\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\n\n            return (\n                <button\n                    onClick={() => onFilterSelect(name)}\n                    key={name}\n                    type='button'\n                    className={`btn ${clazz}`}\n                >{lable}</button>\n            )\n        });\n        return (\n            <div className='btn-group'>\n                {/*<Button color='info'>Все</Button>*/}\n                {btns}\n            </div>\n        )\n    }\n};","import SearchPanel from \"./search-panel.jsx\";\n\nexport default SearchPanel;","import React from \"react\";\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: ''\n        };\n\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    }\n\n    onUpdateSearch(event) {\n        event.preventDefault();\n        const term = event.target.value;\n\n        this.setState({\n            term: term\n        });\n\n        this.props.onUpdateSearch(term);\n    }\n\n    render() {\n        return (\n            <input\n                className=\"form-control search-input\"\n                type=\"text\"\n                placeholder=\"Поиск по записям\"\n                onChange={this.onUpdateSearch}\n            />\n        )\n    }\n};","import PostListItem from \"./post-list-item.jsx\";\nexport default PostListItem;","import React, {Component} from \"react\";\nimport './post-list-item.scss';\n\nexport default class PostListItem extends Component {\n    // Конструктор был нужен на первом этапе\n    //Сейчас мы в класс спускаем функции из app.jsx, поэтому стйти конструктор больше не нужны\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         important: false,\n    //         like: false\n    //     };\n    //     this.onImportant = this.onImportant.bind(this);\n    //     this.onLike = this.onLike.bind(this);\n    // }\n    //\n    // onImportant() {\n    //     this.setState(({important}) => ({\n    //         important: !important\n    //     }));\n    // }\n    //\n    // onLike() {\n    //     this.setState(({like}) => ({\n    //         like: !like\n    //     }));\n    // }\n\n    render() {\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\n        // const {important, like} = this.state;\n\n        let classNames = 'app-list-item d-flex justify-content-between';\n        if (important) classNames += ' important';\n        if (like) classNames += ' like';\n\n        return (\n            <div className={classNames}>\n            <span\n                className='app-list-item-label'\n                // onClick={this.onLike}\n                onClick={onToggleLiked}\n            >\n                {label}\n            </span>\n                <div className='d-flex justify-content-center align-items-center'>\n                    <button\n                        type='button'\n                        className='btn-star btn-sm'\n                        // onClick={this.onImportant}\n                        onClick={onToggleImportant}\n                    >\n                        <i className='fa fa-star'></i>\n                    </button>\n\n                    <button\n                        onClick={onDelete}\n                        className='btn-trash btn-sm'\n                        type='button'\n                    >\n                        <i className='far fa-trash-alt'></i>\n                    </button>\n\n                    <i className='fa fa-heart'></i>\n                </div>\n            </div>\n        )\n    }\n}","import PostList from \"./post-list.jsx\";\n\nexport default PostList;","import React from \"react\";\nimport PostListItem from \"../post-list-item\";\nimport { ListGroup } from 'reactstrap';\nimport './post-list.css';\n\nconst PostList = ({posts, deleteCardById, onToggleImportant, onToggleLiked}) => {\n\n    const element = posts.map(item => {\n        // проверяем пришел ли к нам именно объект\n        if (typeof item === 'object' && isEmpty(item)) {\n            const {id, ...itemProps} = item;\n            return (\n                <li key={id} className='list-group-item'>\n                    <PostListItem\n                        onDelete={() => deleteCardById(id)}\n                        onToggleImportant={() => onToggleImportant(id)}\n                        onToggleLiked={() => onToggleLiked(id)}\n                        {...itemProps}\n                    />\n                </li>\n            )\n        }\n    });\n\n    function isEmpty (item) {\n        for (let i in item) return true;\n        // for (let i in item) {\n        //     console.log(typeof i);\n        //     if (i !== false) return true;\n        // }\n        return false;\n    }\n\n    return (\n       <ListGroup className='app-list'>\n           {element}\n       </ListGroup>\n    )\n};\n\nexport default PostList;","import PostAddForm from \"./post-add-form.jsx\";\n\nexport default PostAddForm;","import React from \"react\";\nimport './post-add-form.css';\n\nexport default class PostAddForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onValueChange(event) {\n        this.setState({\n            text: event.target.value\n        });\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        if (this.state.text.length > 0) {\n            this.props.onAddCard(this.state.text);\n        }\n        this.setState({\n            text: ''\n        });\n    }\n\n    render() {\n        return (\n            <form\n                className='bottom-panel d-flex'\n                onSubmit={this.onSubmit}\n            >\n                <input\n                    type=\"text\"\n                    placeholder='О чём вы думаете сейчас?'\n                    className='form-control new-post-label'\n                    onChange={this.onValueChange}\n                    value={this.state.text}\n                />\n                <button\n                    type='submit'\n                    className='btn btn-outline-secondary'\n                >Добавить</button>\n            </form>\n        )\n    }\n};","import React from \"react\";\n\n// по умолчанию Webpack в уазанной дирректории ищет index.js\n// поэтому from \"../app-header\" === from \"../app-header/index.js\"\nimport AppHeader from \"../app-header\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport SearchPanel from \"../search-panel\";\nimport PostList from \"../post-list\";\nimport PostAddForm from \"../post-add-form\";\n\n// import style from './App.module.scss';\n// import './app.css';\nimport styled from 'styled-components';\n\nconst AppBlock = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n`;\n\nconst StyledAppBlock = styled(AppBlock)`\n  background-color: grey;\n`\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.postsId = 0;\n\n        this.randomMumId = () => {\n            return +(++this.postsId + +Math.random()).toString().replace(/\\./, '');\n        };\n\n        this.state = {\n            dataCards: [\n                { label: 'Going to learn React', important: true, like: false, id: this.randomMumId() },\n                { label: 'That is so funny', important: false, like: true, id: this.randomMumId() },\n                { label: 'I need a break...', important: false, like: false, id: this.randomMumId() }\n            ],\n            term: '',\n            filter: 'all'\n        };\n\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.searchPost = this.searchPost.bind(this);\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n        this.filterPost = this.filterPost.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n\n        this.changeStateForCard = this.changeStateForCard.bind(this);\n    }\n\n    deleteItem(idDeletetCard) {\n        this.postsId--;\n        this.setState(({dataCards}) => {\n            // Вариант I\n            // const index = dataCards.findIndex(elem => elem.id === idDeletetCard);\n            // const before = dataCards.slice(0, index);\n            // const after = dataCards.slice(index+1);\n            // const newArr = [...before, ...after]\n\n            // Вариант II\n            const newArr = [];\n\n            // всегда глубокая копия state иначе ошибки\n            JSON.parse(JSON.stringify(dataCards)).forEach(item => {\n                if (item.id !== idDeletetCard) newArr.push(item);\n            });\n\n            return {\n                dataCards: newArr\n            }\n        });\n    }\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.randomMumId()\n        };\n\n        this.setState(({dataCards}) => {\n            const newArr = [...dataCards, newItem];\n            return {\n                dataCards: newArr\n            };\n        });\n    }\n\n    changeStateForCard(id, elem) {\n        this.setState(({dataCards}) => {\n            // всегда глубокая копия state иначе ошибки\n            const newArr =\n                JSON.parse(JSON.stringify(dataCards))\n                    .map((item) => {\n                        if (item.id === id) {\n                            item[elem] = !item[elem];\n                            return item;\n                        } else return  item;\n                    });\n\n            return {\n                dataCards: newArr\n            }\n        });\n    }\n\n    onToggleImportant(id) {\n        this.changeStateForCard(id, 'important')\n    }\n\n    onToggleLiked(id) {\n        // Вариант I\n        // this.setState(({dataCards}) => {\n        //     // Вариант I\n        //     // const index = dataCards.findIndex(item => item.id === id);\n        //     // const old = dataCards[index]\n        //     // const newItem = {...old, like: !old.like}\n        //     // const newArr = [...dataCards.slice(0, index), newItem, ...dataCards.slice(index +1)];\n        //\n        //     // Вариант II\n        //     // всегда глубокая копия state иначе ошибки\n        //     const newArr =\n        //         JSON.parse(JSON.stringify(dataCards))\n        //             .map(item => {\n        //                 if (item.id === id) {\n        //                     item.like = !item.like;\n        //                     return item;\n        //                 } else return  item;\n        //             });\n        //\n        //     return {\n        //         dataCards: newArr\n        //     }\n        // });\n        // Вариант II\n        this.changeStateForCard(id, 'like')\n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) return items;\n\n        return items.filter((item) => item.label.indexOf(term) > -1);\n    }\n\n    onUpdateSearch(term) {\n        this.setState({term: term});\n    }\n\n    filterPost(items, filter) {\n        if (filter === 'like') return items.filter(item => item.like);\n        else return items;\n    }\n\n    onFilterSelect (filter) {\n        this.setState({filter: filter});\n\n    }\n\n    render() {\n        const {dataCards, term, filter} = this.state;\n\n        const visiblePosts = this.filterPost(this.searchPost(dataCards, term), filter);\n        const allPosts = dataCards.length;\n        // Вариант I\n        const likedPostCurrentCount = dataCards.filter(item => item.like).length;\n        // Вариант II\n        // const allPosts = this.state.dataCards.length;\n        // const likedPostCurrentCount = this.state.dataCards.filter(item => {\n        //     return item.like === true;\n        // }).length;\n\n        return (\n            <AppBlock>\n                <AppHeader\n                    allPosts = {allPosts}\n                    likedPostCurrentCount = {likedPostCurrentCount}\n                />\n                <div className='search-panel d-flex'>\n                    <SearchPanel\n                        onUpdateSearch={this.onUpdateSearch}\n                    />\n                    <PostStatusFilter\n                        filter={filter}\n                        onFilterSelect={this.onFilterSelect}\n                    />\n                </div>\n                <PostList\n                    // posts = {this.state.dataCards}\n                    posts = {visiblePosts}\n                    deleteCardById = {this.deleteItem}\n                    onToggleImportant = {this.onToggleImportant}\n                    onToggleLiked = {this.onToggleLiked}\n                />\n                <PostAddForm\n                    onAddCard = {this.addItem}\n                />\n            </AppBlock>\n        )\n    }\n}","import App from \"./app.jsx\";\n\nexport default App;","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}